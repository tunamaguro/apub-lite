name: Rust CI

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - "**.rs"
      - 'crates/**'
      - '**Cargo.toml'
      - '**Cargo.lock'
      - "rust-toolchain.toml"
      - "rustfmt.toml"
      - ".cargo/config.toml"
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1
  RUSTFLAGS: --deny warnings

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          components: rustfmt
          bins: taplo-cli
          cache-base: main
      - name: Run format
        run: |
          cargo fmt --all --check
          taplo format --check
  lint:
    name: Lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.0-bookworm
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          components: clippy
          cache-base: main
          bins: sqlx-cli
      - name: Run lint
        env:
          DATABASE_URL: postgresql://localhost:5432/app?user=app&password=password
        run: |
          cargo sqlx migrate run --source crates/apub-adapter/migrations
          cargo clippy --all-targets --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.0-bookworm
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v5
      - name: Install Rust
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-nextest,sqlx-cli
          cache-base: main
      - name: Run test
        env:
          DATABASE_URL: postgresql://localhost:5432/app?user=app&password=password
        run: |
          cargo sqlx migrate run --source crates/apub-adapter/migrations
          cargo nextest run --workspace
